syntax = "proto3";

package org.ga4gh.vrsatile.v1;

import "google/protobuf/any.proto";
import "ga4gh/vrs/v1/vrs.proto";
import "phenopackets/schema/v2/core/base.proto";

option java_multiple_files = true;
option java_package = "org.ga4gh.vrsatile.v1";

// https://vrsatile.readthedocs.io/en/latest/value_object_descriptor/vod_index.html#extension
message Extension {
  string name = 1;
  repeated google.protobuf.Any value = 2;
}

// https://vrsatile.readthedocs.io/en/latest/value_object_descriptor/vod_index.html#expression
message Expression {
  string syntax = 1;
  string value = 2;
  string version = 3;
}

message VcfRecord {
  string genome_assembly = 1;
  string chrom = 2;
  uint64 pos = 3;
  string id = 4;
  string ref = 5;
  string alt = 6;
  string qual = 7;
  string filter = 8;
  string info = 9;
}

message VariationDescriptor {
  string id = 1;
  org.ga4gh.vrs.v1.Variation variation = 2;
  string label = 3;
  string description = 4;
  // A specific gene context that applies to this variant.
  GeneDescriptor gene_context = 5;
  // HGVS, SPDI, and gnomAD-style strings should be represented as Expressions
  repeated Expression expressions = 6;
  // A VCF Record of the variant. This SHOULD be a single allele, the VCF genotype (GT) field should be represented in
  // the allelic_state
  VcfRecord vcf_record = 7;
  // Allele registry, ClinVar, or other related IDs should be included as xrefs
  repeated string xrefs = 8;
  // Common aliases for a variant, e.g. EGFR vIII, are alternate labels
  repeated string alternate_labels = 9;
  repeated Extension extensions = 10;
  // The molecular context of the vrs variation. Must be one of “genomic”, “transcript”, or “protein”.
  // Defaults to "unspecified_molecule_context"
  MoleculeContext molecule_context = 11;
  // The structural variant type associated with this variant, such as a substitution, deletion, or fusion.
  // We RECOMMEND using a descendent term of SO:0001537.
  org.phenopackets.schema.v2.core.OntologyClass structural_type = 12;
  // A Sequence corresponding to a “ref allele”, describing the sequence expected at a SequenceLocation reference.
  string vrs_ref_allele_seq = 13;
  // We RECOMMEND that the allelic_state of variant be described by terms from the Genotype Ontology (GENO).
  // These SHOULD descend from concept GENO:0000875.
  org.phenopackets.schema.v2.core.OntologyClass allelic_state = 14;
}

enum MoleculeContext {
  unspecified_molecule_context = 0;
  genomic = 1;
  transcript = 2;
  protein = 3;
}

// https://vrsatile.readthedocs.io/en/latest/value_object_descriptor/vod_index.html#gene-descriptor
message GeneDescriptor {
  // The official gene identifier as designated by the organism gene nomenclature committee e.g. HGNC:3477 or MGI:2385071
  // This should be a CURIE linking the reference to a namespace where it can be retrieved.
  // Mirrors the value_id field of a generic value object descriptor
  string value_id = 1;
  // The primary gene symbol. Takes the place of the label field in a generic descriptor
  string symbol = 2;
  // A free-text description of the value object
  string description = 3;
  // Alternate IDs (should be CURIE) for the same concept may be placed in alternate_ids
  repeated string alternate_ids = 4;
  // Takes the place of alternate_labels field in a generic descriptor
  repeated string alternate_symbols = 5;
  // Related concept IDs (e.g. gene ortholog IDs) may be placed in xrefs
  repeated string xrefs = 6;
}
